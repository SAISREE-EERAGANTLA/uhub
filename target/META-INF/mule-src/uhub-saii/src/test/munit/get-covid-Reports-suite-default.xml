<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-covid-Reports-suite-default.xml" />
	<munit:test name="get:\reports:uhub-config-test1" doc:id="6d9d82ca-36e3-4b98-a15e-eb35ec16b950" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock get covid reports" doc:id="331d2c88-4f49-4294-bbaa-61308f7573f5" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5a12f500-79f2-4ad5-bcc6-cec3e974a6f0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getreportsuhubconfigtest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getreportsuhubconfigtest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="state" value="#[output application/java --- readUrl('classpath://getreportsuhubconfigtest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="correlationId" value="#[output application/java --- readUrl('classpath://getreportsuhubconfigtest1\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="transactionId" value="#[output application/java --- readUrl('classpath://getreportsuhubconfigtest1\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6d124083-b35e-4673-bc2a-03f1cc9b95a8" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getreportsuhubconfigtest1\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getreportsuhubconfigtest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getreportsuhubconfigtest1\set-event_variable_.dwl')]" />
					<munit:variable key="transactionId" value="#[output application/java --- readUrl('classpath://getreportsuhubconfigtest1\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\reports:uhub-config" doc:id="4876fe80-0175-462c-8819-760dbd66bd53" name="get:\reports:uhub-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="caf7ae1e-bfdf-4b96-b1fc-20d217fc1c39" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getreportsuhubconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
